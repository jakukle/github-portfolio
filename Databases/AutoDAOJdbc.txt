/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dao;

import entities.Auto;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.sql.DataSource;

/**
 *
 * @author RaU7
 */
public class AutoDAOJdbc implements AutoDAO {

    private final DataSource ds;

    public AutoDAOJdbc() {
        com.mysql.jdbc.jdbc2.optional.MysqlDataSource mds = new com.mysql.jdbc.jdbc2.optional.MysqlDataSource();
        mds.setUser("root");
        mds.setPort(6033);
        mds.setPassword("");
        mds.setDatabaseName("testdao");
        ds = mds;
    }

    @Override
    public List<Auto> getAll() {
        List<Auto> autoList = new ArrayList<>();
        try (ResultSet rs = ds.getConnection().createStatement().executeQuery("select * from auta")) {
            while (rs.next()) {
                Auto auto = new Auto();
                auto.setId(rs.getInt("id_auta"));
                auto.setMarka(rs.getString("marka"));
                auto.setModel(rs.getString("model"));
                auto.setRocznik(rs.getInt("rocznik"));
                autoList.add(auto);
            }
        } catch (SQLException ex) {
            System.out.println("getAll: " + ex);
        }
        
        return autoList;
    }

    @Override
    public Auto get(int id) {
        Auto auto = new Auto();
        try (PreparedStatement pstmt = ds
                .getConnection().prepareStatement("select * from auta where id_auta=?");) {
            pstmt.setInt(1, id);
            ResultSet rs = pstmt.executeQuery();
            rs.next();
            auto.setId(rs.getInt("id_auta"));
            auto.setMarka(rs.getString("marka"));
            auto.setModel(rs.getString("model"));
            auto.setRocznik(rs.getInt("rocznik"));
//            return box;
        } catch (SQLException ex) {
            System.out.println("get " + ex);
        }
       return auto; 
    }

    @Override
    public void create(Auto auto) {
         try (PreparedStatement pstmt = ds
                .getConnection().prepareStatement("insert into auta(marka, model, rocznik) values(?, ?, ?)");) {
            pstmt.setString(1, auto.getMarka());
            pstmt.setString(2, auto.getModel());
            pstmt.setInt(3, auto.getRocznik());
            pstmt.executeUpdate();
        } catch (SQLException ex) {
            System.out.println("create " + ex);
        }
    }
        
    

    @Override
    public void update(Auto auto) {
        try (PreparedStatement pstmt = ds
                .getConnection().prepareStatement("update auta set marka=?, model=?, rocznik=?  where id_auta = ?");) {
            pstmt.setString(1, auto.getMarka());
            pstmt.setString(2, auto.getModel());
            pstmt.setInt(3, auto.getRocznik());
            pstmt.setInt(4, auto.getId());
            pstmt.executeUpdate();
        } catch (SQLException ex) {
            System.out.println("update " + ex);
        }
        
    }

    @Override
    public void delete(Auto auto) {
        try (PreparedStatement pstmt = ds
                .getConnection().prepareStatement("delete from auta where id_auta= ?");) {
            pstmt.setInt(1, auto.getId());
            pstmt.executeUpdate();
        } catch (SQLException ex) {
            System.out.println("delete " + ex);
        }
    }

    @Override
    public void clearTable() {
        try {
            ds.getConnection().createStatement().executeUpdate("delete from auta");
        } catch (SQLException ex) {
            System.out.println("clear table " + ex);
        }
    }

   

}
